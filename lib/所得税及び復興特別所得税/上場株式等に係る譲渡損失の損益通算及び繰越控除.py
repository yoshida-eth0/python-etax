"""
所得税及び復興特別所得税の確定申告書付表
上場株式等に係る譲渡損失の損益通算及び繰越控除用
"""

from typing import Self

import pandas as pd
from utils import ゼロ以上
from 所得税及び復興特別所得税.株式等に係る譲渡所得等の金額の計算明細書 import 株式等に係る譲渡所得等の金額の計算明細書


"""
1. 本年分の上場株式等に係る譲渡損失の金額及び分離課税配当所得等金額の計算
"""

class 本年分の損益通算前の上場株式等に係る譲渡損失の金額:
    """
    所得税及び復興特別所得税の確定申告書付表
    上場株式等に係る譲渡損失の損益通算及び繰越控除用
    1. 本年分の上場株式等に係る譲渡損失の金額及び分離課税配当所得等金額の計算
    (1) 本年分の損益通算前の上場株式等に係る譲渡損失の金額
    """
    def __init__(self, x株式等に係る譲渡所得等の金額の計算明細書: 株式等に係る譲渡所得等の金額の計算明細書):
        self.株式等に係る譲渡所得等の金額の計算明細書 = x株式等に係る譲渡所得等の金額の計算明細書

    @property
    def 上場株式等に係る譲渡所得等の金額(self) -> int:
        """
        上場株式等に係る譲渡所得等の金額
        """
        return max(self.株式等に係る譲渡所得等の金額の計算明細書.上場株式等.所得金額 * -1, 0)

    @property
    def 上場株式等に係る譲渡損失の金額(self) -> int:
        """
        上場株式等に係る譲渡損失の金額
        """
        return max(self.株式等に係る譲渡所得等の金額の計算明細書.上場株式等.差引金額 * -1, 0)

    @property
    def 本年分の損益通算前の上場株式等に係る譲渡損失の金額(self) -> int:
        """
        本年分の損益通算前の上場株式等に係る譲渡損失の金額
        """
        return min(self.上場株式等に係る譲渡所得等の金額, self.上場株式等に係る譲渡損失の金額)

    def to_dataframe(self) -> pd.DataFrame:
        """
        DataFrameに変換
        """
        return pd.DataFrame([
            ['1', '上場株式等に係る譲渡所得等の金額', self.上場株式等に係る譲渡所得等の金額],
            ['2', '上場株式等に係る譲渡損失の金額', self.上場株式等に係る譲渡損失の金額],
            ['3', '本年分の損益通算前の上場株式等に係る譲渡損失の金額', self.本年分の損益通算前の上場株式等に係る譲渡損失の金額],
        ], columns=['key', 'label1', 'value'])


class 本年分の損益通算前の分離課税配当所得等金額_明細:
    """
    所得税及び復興特別所得税の確定申告書付表
    上場株式等に係る譲渡損失の損益通算及び繰越控除用
    1. 本年分の上場株式等に係る譲渡損失の金額及び分離課税配当所得等金額の計算
    (2) 本年分の損益通算前の分離課税配当所得等金額
    明細
    """
    def __init__(self, 種目所得の生ずる場所: str, 利子等配当等の収入金額: int, 配当所得に係る負債の利子: int):
        # 種目・所得の生ずる場所
        self.種目所得の生ずる場所 = 種目所得の生ずる場所

        # 利子等・配当等の収入金額(税込)
        self.利子等配当等の収入金額 = 利子等配当等の収入金額

        # 配当所得に係る負債の利子
        self.配当所得に係る負債の利子 = 配当所得に係る負債の利子

    def to_series(self) -> pd.Series:
        """
        Seriesに変換
        """
        return pd.Series(
            [self.種目所得の生ずる場所, self.利子等配当等の収入金額, self.配当所得に係る負債の利子],
            index=['種目・所得の生ずる場所', '利子等・配当等の収入金額(税込)', '配当所得に係る負債の利子']
        )


class 本年分の損益通算前の分離課税配当所得等金額:
    """
    所得税及び復興特別所得税の確定申告書付表
    上場株式等に係る譲渡損失の損益通算及び繰越控除用
    1. 本年分の上場株式等に係る譲渡損失の金額及び分離課税配当所得等金額の計算
    (2) 本年分の損益通算前の分離課税配当所得等金額
    """
    def __init__(self, 明細一覧: list[本年分の損益通算前の分離課税配当所得等金額_明細]|None = None):
        self.明細一覧 = 明細一覧 or []

    @property
    def 合計_利子等配当等の収入金額(self) -> int:
        """
        合計 -> 利子等・配当等の収入金額(税込)
        """
        return sum([v.利子等配当等の収入金額 for v in self.明細一覧])

    @property
    def 合計_配当所得に係る負債の利子(self) -> int:
        """
        合計 -> 配当所得に係る負債の利子
        """
        return sum([v.配当所得に係る負債の利子 for v in self.明細一覧])

    @property
    @ゼロ以上
    def 本年分の損益通算前の分離課税配当所得等金額(self) -> int:
        """
        本年分の損益通算前の分離課税配当所得等金額
        """
        return self.合計_利子等配当等の収入金額 - self.合計_配当所得に係る負債の利子

    def to_dataframe(self) -> pd.DataFrame:
        """
        DataFrameに変換
        """
        rows = [v.to_series() for v in self.明細一覧]
        dfs = [series.to_frame().T for series in rows]
        df = pd.concat(dfs, ignore_index=True)

        total_df = pd.DataFrame([
            ['合計', self.合計_利子等配当等の収入金額, self.合計_配当所得に係る負債の利子],
            ['本年分の損益通算前の分離課税配当所得等金額', self.本年分の損益通算前の分離課税配当所得等金額, 0],
        ], columns=['種目・所得の生ずる場所', '利子等・配当等の収入金額(税込)', '配当所得に係る負債の利子'])

        return pd.concat([df, total_df], ignore_index=True)


class 本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額:
    """
    所得税及び復興特別所得税の確定申告書付表
    上場株式等に係る譲渡損失の損益通算及び繰越控除用
    1. 本年分の上場株式等に係る譲渡損失の金額及び分離課税配当所得等金額の計算
    (3) 本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額
    """
    def __init__(self, x本年分の損益通算前の上場株式等に係る譲渡損失の金額: 本年分の損益通算前の上場株式等に係る譲渡損失の金額, x本年分の損益通算前の分離課税配当所得等金額: 本年分の損益通算前の分離課税配当所得等金額):
        # (1) 本年分の損益通算前の上場株式等に係る譲渡損失の金額
        self.本年分の損益通算前の上場株式等に係る譲渡損失の金額 = x本年分の損益通算前の上場株式等に係る譲渡損失の金額

        # (2) 本年分の損益通算前の分離課税配当所得等金額
        self.本年分の損益通算前の分離課税配当所得等金額 = x本年分の損益通算前の分離課税配当所得等金額

    @property
    @ゼロ以上
    def 本年分の損益通算後の上場株式等に係る譲渡損失の金額(self) -> int:
        """
        5. 本年分の損益通算後の上場株式等に係る譲渡損失の金額
        """
        return self.本年分の損益通算前の上場株式等に係る譲渡損失の金額.本年分の損益通算前の上場株式等に係る譲渡損失の金額 - self.本年分の損益通算前の分離課税配当所得等金額.本年分の損益通算前の分離課税配当所得等金額

    @property
    @ゼロ以上
    def 本年分の損益通算後の分離課税配当所得等金額(self) -> int:
        """
        6. 本年分の損益通算後の分離課税配当所得等金額
        """
        return self.本年分の損益通算前の分離課税配当所得等金額.本年分の損益通算前の分離課税配当所得等金額 - self.本年分の損益通算前の上場株式等に係る譲渡損失の金額.本年分の損益通算前の上場株式等に係る譲渡損失の金額

    def to_dataframe(self) -> pd.DataFrame:
        """
        DataFrameに変換
        """
        return pd.DataFrame([
            ['1', '上場株式等に係る譲渡所得等の金額', self.本年分の損益通算前の上場株式等に係る譲渡損失の金額.上場株式等に係る譲渡所得等の金額],
            ['2', '上場株式等に係る譲渡損失の金額', self.本年分の損益通算前の上場株式等に係る譲渡損失の金額.上場株式等に係る譲渡損失の金額],
            ['3', '本年分の損益通算前の上場株式等に係る譲渡損失の金額', self.本年分の損益通算前の上場株式等に係る譲渡損失の金額.本年分の損益通算前の上場株式等に係る譲渡損失の金額],
            ['4', '本年分の損益通算前の分離課税配当所得等金額', self.本年分の損益通算前の分離課税配当所得等金額.本年分の損益通算前の分離課税配当所得等金額],
            ['5', '本年分の損益通算後の上場株式等に係る譲渡損失の金額', self.本年分の損益通算後の上場株式等に係る譲渡損失の金額],
            ['6', '本年分の損益通算後の分離課税配当所得等金額', self.本年分の損益通算後の分離課税配当所得等金額],
        ], columns=['key', 'label1', 'value'])


"""
2. 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算
"""

class 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算_年分:
    """
    所得税及び復興特別所得税の確定申告書付表
    上場株式等に係る譲渡損失の損益通算及び繰越控除用
    2. 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算
    1年分
    """
    def __init__(self, 年分: str, is_繰越対象: bool, x株式等に係る譲渡所得等の金額の計算明細書: 株式等に係る譲渡所得等の金額の計算明細書, x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額: 本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額, 過去の年分一覧: list[Self], 前年から繰り越された上場株式等に係る譲渡損失の金額: int = 0):
        self.年分 = 年分
        self.is_繰越対象 = is_繰越対象
        self.株式等に係る譲渡所得等の金額の計算明細書 = x株式等に係る譲渡所得等の金額の計算明細書
        self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額 = x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額
        self.過去の年分一覧 = 過去の年分一覧

        # 前年から繰り越された上場株式等に係る譲渡損失の金額
        self.前年から繰り越された上場株式等に係る譲渡損失の金額 = 前年から繰り越された上場株式等に係る譲渡損失の金額

    @property
    def _上場株式等に係る譲渡所得等の金額の残高(self) -> int:
        """
        上場株式等に係る譲渡所得等の金額の残高
        """
        _max = self.株式等に係る譲渡所得等の金額の計算明細書.上場株式等.所得金額
        minus = sum([v.本年分で差し引く上場株式等に係る譲渡損失の金額_上場株式等に係る譲渡所得等の金額から差し引く部分 for v in self.過去の年分一覧])
        return _max - minus

    @property
    def _分離課税配当所得等金額の残高(self) -> int:
        """
        分離課税配当所得等金額の残高
        """
        _max = self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額.本年分の損益通算後の分離課税配当所得等金額
        minus = sum([v.本年分で差し引く上場株式等に係る譲渡損失の金額_分離課税配当所得等金額から差し引く部分 for v in self.過去の年分一覧])
        return _max - minus

    @property
    def 譲渡損失の生じた年分(self) -> str:
        """
        譲渡損失の生じた年分
        """
        return f'本年の{self.年分}分'

    @property
    @ゼロ以上
    def 本年分で差し引く上場株式等に係る譲渡損失の金額_上場株式等に係る譲渡所得等の金額から差し引く部分(self) -> int:
        """
        本年分で差し引く上場株式等に係る譲渡損失の金額 -> 上場株式等に係る譲渡所得等の金額から差し引く部分
        """
        残高 = self._上場株式等に係る譲渡所得等の金額の残高
        損失 = self.前年から繰り越された上場株式等に係る譲渡損失の金額
        return min(残高, 損失)

    @property
    @ゼロ以上
    def 本年分で差し引く上場株式等に係る譲渡損失の金額_分離課税配当所得等金額から差し引く部分(self) -> int:
        """
        本年分で差し引く上場株式等に係る譲渡損失の金額 -> 分離課税配当所得等金額から差し引く部分
        """
        残高 = self._分離課税配当所得等金額の残高
        損失 = self.前年から繰り越された上場株式等に係る譲渡損失の金額 - self.本年分で差し引く上場株式等に係る譲渡損失の金額_上場株式等に係る譲渡所得等の金額から差し引く部分
        return min(残高, 損失)

    @property
    def 本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額(self) -> int | None:
        """
        本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額
        """
        if self.is_繰越対象:
            rem = self.前年から繰り越された上場株式等に係る譲渡損失の金額
            rem -= self.本年分で差し引く上場株式等に係る譲渡損失の金額_上場株式等に係る譲渡所得等の金額から差し引く部分
            rem -= self.本年分で差し引く上場株式等に係る譲渡損失の金額_分離課税配当所得等金額から差し引く部分
            return rem
        return None

    def to_series(self) -> pd.Series:
        """
        Seriesに変換
        """
        return pd.Series(
            [self.譲渡損失の生じた年分, self.前年から繰り越された上場株式等に係る譲渡損失の金額, self.本年分で差し引く上場株式等に係る譲渡損失の金額_上場株式等に係る譲渡所得等の金額から差し引く部分, self.本年分で差し引く上場株式等に係る譲渡損失の金額_分離課税配当所得等金額から差し引く部分, self.本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額],
            index=['譲渡損失の生じた年分', '前年から繰り越された上場株式等に係る譲渡損失の金額', '本年分で差し引く上場株式等に係る譲渡損失の金額(上場株式等に係る譲渡所得等の金額から差し引く部分)', '本年分で差し引く上場株式等に係る譲渡損失の金額(分離課税配当所得等金額から差し引く部分)', '本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額']
        )


class 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算:
    """
    所得税及び復興特別所得税の確定申告書付表
    上場株式等に係る譲渡損失の損益通算及び繰越控除用
    2. 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算
    """
    def __init__(self, x株式等に係る譲渡所得等の金額の計算明細書: 株式等に係る譲渡所得等の金額の計算明細書, x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額: 本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額, x3年前から繰り越された上場株式等に係る譲渡損失の金額: int = 0, x2年前から繰り越された上場株式等に係る譲渡損失の金額: int = 0, x前年から繰り越された上場株式等に係る譲渡損失の金額: int = 0):
        self.株式等に係る譲渡所得等の金額の計算明細書 = x株式等に係る譲渡所得等の金額の計算明細書
        self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額 = x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額

        self.本年の3年前分 = 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算_年分(
            '3年前', False, x株式等に係る譲渡所得等の金額の計算明細書, x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額,
            [],
            x3年前から繰り越された上場株式等に係る譲渡損失の金額
        )
        self.本年の2年前分 = 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算_年分(
            '2年前', True, x株式等に係る譲渡所得等の金額の計算明細書, x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額,
            [self.本年の3年前分],
            x2年前から繰り越された上場株式等に係る譲渡損失の金額
        )
        self.本年の前年分 = 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算_年分(
            '前年', True, x株式等に係る譲渡所得等の金額の計算明細書, x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額,
            [self.本年の3年前分, self.本年の2年前分],
            x前年から繰り越された上場株式等に係る譲渡損失の金額
        )

        self.年分一覧 = [self.本年の3年前分, self.本年の2年前分, self.本年の前年分]

    @property
    def 本年分で上場株式等に係る譲渡所得等の金額から差し引く上場株式等に係る譲渡損失の金額の合計額(self) -> int:
        """
        9. 本年分で上場株式等に係る譲渡所得等の金額から差し引く上場株式等に係る譲渡損失の金額の合計額
        """
        return sum([v.本年分で差し引く上場株式等に係る譲渡損失の金額_上場株式等に係る譲渡所得等の金額から差し引く部分 for v in self.年分一覧])

    @property
    def 本年分で分離課税配当所得等金額から差し引く上場株式等に係る譲渡損失の金額の合計額(self) -> int:
        """
        10. 本年分で分離課税配当所得等金額から差し引く上場株式等に係る譲渡損失の金額の合計額
        """
        return sum([v.本年分で差し引く上場株式等に係る譲渡損失の金額_分離課税配当所得等金額から差し引く部分 for v in self.年分一覧])

    @property
    def 翌年以後に繰り越される上場株式等に係る譲渡損失の金額(self) -> int:
        """
        11. 翌年以後に繰り越される上場株式等に係る譲渡損失の金額
        """
        total = 0
        total += self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額.本年分の損益通算後の上場株式等に係る譲渡損失の金額
        total += self.本年の2年前分.本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額
        total += self.本年の前年分.本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額
        return total

    def to_detail_dataframe(self) -> pd.DataFrame:
        """
        年分一覧をDataFrameに変換
        """
        rows = [v.to_series() for v in self.年分一覧]
        dfs = [series.to_frame().T for series in rows]
        return pd.concat(dfs, ignore_index=True)

    def to_dataframe(self) -> pd.DataFrame:
        """
        DataFrameに変換
        """
        return pd.DataFrame([
            ['7', '本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額', '本年の2年前分', self.本年の2年前分.本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額],
            ['8', '本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額', '本年の前年分', self.本年の前年分.本年分で差し引くことのできなかった上場株式等に係る譲渡損失の金額],
            ['9', '本年分で上場株式等に係る譲渡所得等の金額から差し引く上場株式等に係る譲渡損失の金額の合計額', None, self.本年分で上場株式等に係る譲渡所得等の金額から差し引く上場株式等に係る譲渡損失の金額の合計額],
            ['10', '本年分で分離課税配当所得等金額から差し引く上場株式等に係る譲渡損失の金額の合計額', None, self.本年分で分離課税配当所得等金額から差し引く上場株式等に係る譲渡損失の金額の合計額],
            ['11', '翌年以後に繰り越される上場株式等に係る譲渡損失の金額', None, self.翌年以後に繰り越される上場株式等に係る譲渡損失の金額],
        ], columns=['key', 'label1', 'label2', 'value'])


"""
3. 前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算
"""

class 前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算:
    """
    所得税及び復興特別所得税の確定申告書付表
    上場株式等に係る譲渡損失の損益通算及び繰越控除用
    3. 前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算
    """
    def __init__(self, x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額: 本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額, x翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算: 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算):
        self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額 = x本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額
        self.翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算 = x翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算

    @property
    def 前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算(self) -> int:
        """
        12. 前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算
        """
        return self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額.本年分の損益通算後の分離課税配当所得等金額 - self.翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算.本年分で分離課税配当所得等金額から差し引く上場株式等に係る譲渡損失の金額の合計額

    def to_dataframe(self) -> pd.DataFrame:
        """
        DataFrameに変換
        """
        return pd.DataFrame([
            ['12', '前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算', None, self.前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算],
        ], columns=['key', 'label1', 'label2', 'value'])


class 上場株式等に係る譲渡損失の損益通算及び繰越控除:
    """
    所得税及び復興特別所得税の確定申告書付表
    上場株式等に係る譲渡損失の損益通算及び繰越控除用
    """
    def __init__(self,
                 x株式等に係る譲渡所得等の金額の計算明細書: 株式等に係る譲渡所得等の金額の計算明細書,
                 x本年分の損益通算前の分離課税配当所得等金額: 本年分の損益通算前の分離課税配当所得等金額,
                 x3年前から繰り越された上場株式等に係る譲渡損失の金額=0,
                 x2年前から繰り越された上場株式等に係る譲渡損失の金額=0,
                 x前年から繰り越された上場株式等に係る譲渡損失の金額=0):
        # 1. 本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額
        self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額 = 本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額(
            本年分の損益通算前の上場株式等に係る譲渡損失の金額(x株式等に係る譲渡所得等の金額の計算明細書),
            x本年分の損益通算前の分離課税配当所得等金額
        )

        # 2. 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算
        self.翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算 = 翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算(
            x株式等に係る譲渡所得等の金額の計算明細書, self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額,
            x3年前から繰り越された上場株式等に係る譲渡損失の金額=x3年前から繰り越された上場株式等に係る譲渡損失の金額,
            x2年前から繰り越された上場株式等に係る譲渡損失の金額=x2年前から繰り越された上場株式等に係る譲渡損失の金額,
            x前年から繰り越された上場株式等に係る譲渡損失の金額=x前年から繰り越された上場株式等に係る譲渡損失の金額
        )

        # 3. 前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算
        self.前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算 = 前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算(
            self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額,
            self.翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算
        )

    def to_dataframe(self) -> pd.DataFrame:
        """
        DataFrameに変換
        """
        dfs = [
            self.本年分の損益通算後の上場株式等に係る譲渡損失の金額又は分離課税配当所得等金額.to_dataframe(),
            self.翌年以降に繰り越される上場株式等に係る譲渡損失の金額の計算.to_dataframe(),
            self.前年から繰り越された上場株式等に係る譲渡損失の金額を控除した後の本年分の分離課税配当所得等金額の計算.to_dataframe(),
        ]
        return pd.concat(dfs, ignore_index=True)[['key', 'label1', 'label2', 'value']]
